{
  "address": "0x998B3edC44f254b5ABf9E94C64b10b56d2338CfB",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "boss",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Funded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "bossAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getBoss",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFundedLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xe727b33932afa48f058c5ca7b986975e3e9bc95e051915cbbc853f73fbacdb8a",
  "receipt": {
    "to": null,
    "from": "0x294e0bCC654D249eA6EF17f9f83d20B58999C921",
    "contractAddress": "0x998B3edC44f254b5ABf9E94C64b10b56d2338CfB",
    "transactionIndex": 86,
    "gasUsed": "812966",
    "logsBloom": "0x
    "blockHash": "0x48e4d5256a20551237406f6bd140f9d43a1f7663ed343ba9b7f1009df56d95e2",
    "transactionHash": "0xe727b33932afa48f058c5ca7b986975e3e9bc95e051915cbbc853f73fbacdb8a",
    "logs": [
      {
        "transactionIndex": 86,
        "blockNumber": 6672391,
        "transactionHash": "0xe727b33932afa48f058c5ca7b986975e3e9bc95e051915cbbc853f73fbacdb8a",
        "address": "0x998B3edC44f254b5ABf9E94C64b10b56d2338CfB",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000294e0bcc654d249ea6ef17f9f83d20b58999c921"
        ],
        "data": "0x",
        "logIndex": 148,
        "blockHash": "0x48e4d5256a20551237406f6bd140f9d43a1f7663ed343ba9b7f1009df56d95e2"
      }
    ],
    "blockNumber": 6672391,
    "cumulativeGasUsed": "9027051",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x294e0bCC654D249eA6EF17f9f83d20B58999C921"
  ],
  "numDeployments": 1,
  "solcInputHash": "c757d8bae2ab5ec4eb9a8bbf86e2c20b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"boss\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Funded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bossAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getBoss\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFundedLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"Funds our contract based on the ETH/USD price\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BuyMeACupOfCoffee.sol\":\"BuyMeACupOfCoffee\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/BuyMeACupOfCoffee.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract BuyMeACupOfCoffee is Ownable {\\r\\n    // State variables\\r\\n    uint256 public constant MINIMUM_USD = 10 ** 16;\\r\\n    address[] private s_bosses;\\r\\n    mapping(address => bool) private s_isBoss;\\r\\n    mapping(address => uint256) private s_addressToAmountFunded;\\r\\n\\r\\n    // Events\\r\\n    event Funded(address indexed boss, uint256 indexed amount);\\r\\n\\r\\n    constructor(address owner) Ownable(owner) {}\\r\\n\\r\\n    receive() external payable {}\\r\\n\\r\\n    /// @notice Funds our contract based on the ETH/USD price\\r\\n    function fund() public payable {\\r\\n        require(msg.value >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\r\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\r\\n        if (!s_isBoss[msg.sender]) {\\r\\n            s_bosses.push(msg.sender);\\r\\n            s_isBoss[msg.sender] = true;\\r\\n        }\\r\\n        emit Funded(msg.sender, msg.value);\\r\\n    }\\r\\n\\r\\n    function withdraw() public onlyOwner {\\r\\n        address[] memory bosses = s_bosses;\\r\\n        for (uint256 bossIndex = 0; bossIndex < bosses.length; bossIndex++) {\\r\\n            address boss = bosses[bossIndex];\\r\\n            s_addressToAmountFunded[boss] = 0;\\r\\n            s_isBoss[msg.sender] = false;\\r\\n        }\\r\\n        s_bosses = new address[](0);\\r\\n\\r\\n        address owner = owner();\\r\\n        (bool success, ) = owner.call{value: address(this).balance}(\\\"\\\");\\r\\n        require(success);\\r\\n    }\\r\\n\\r\\n    function getAddressToAmountFunded(\\r\\n        address bossAddress\\r\\n    ) public view returns (uint256) {\\r\\n        return s_addressToAmountFunded[bossAddress];\\r\\n    }\\r\\n\\r\\n    function getBoss(uint256 index) public view returns (address) {\\r\\n        return s_bosses[index];\\r\\n    }\\r\\n    function getFundedLength() public view returns (uint256) {\\r\\n        return s_bosses.length;\\r\\n    }\\r\\n\\r\\n    function getOwner() public view returns (address) {\\r\\n        return owner();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x1330baf0060b14dcb2f01f8fcc63493e6d9e19597cd7df789e1ba0bd5f2982d1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000f9438038062000f948339818101604052810190620000379190620001f4565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a4919062000237565b60405180910390fd5b620000be81620000c660201b60201c565b505062000254565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001bc826200018f565b9050919050565b620001ce81620001af565b8114620001da57600080fd5b50565b600081519050620001ee81620001c3565b92915050565b6000602082840312156200020d576200020c6200018a565b5b60006200021d84828501620001dd565b91505092915050565b6200023181620001af565b82525050565b60006020820190506200024e600083018462000226565b92915050565b610d3080620002646000396000f3fe6080604052600436106100955760003560e01c8063893d20e811610059578063893d20e8146101745780638da5cb5b1461019f578063b60d4288146101ca578063cb95f55e146101d4578063f2fde38b146101ff5761009c565b80630343fb25146100a15780630e63c7ad146100de5780633ccfd60b1461011b5780636b69a59214610132578063715018a61461015d5761009c565b3661009c57005b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c39190610a4a565b610228565b6040516100d59190610a90565b60405180910390f35b3480156100ea57600080fd5b5061010560048036038101906101009190610ad7565b610271565b6040516101129190610b13565b60405180910390f35b34801561012757600080fd5b506101306102b9565b005b34801561013e57600080fd5b50610147610510565b6040516101549190610a90565b60405180910390f35b34801561016957600080fd5b5061017261051b565b005b34801561018057600080fd5b5061018961052f565b6040516101969190610b13565b60405180910390f35b3480156101ab57600080fd5b506101b461053e565b6040516101c19190610b13565b60405180910390f35b6101d2610567565b005b3480156101e057600080fd5b506101e961075a565b6040516101f69190610a90565b60405180910390f35b34801561020b57600080fd5b5061022660048036038101906102219190610a4a565b610767565b005b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006001828154811061028757610286610b2e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6102c16107ed565b6000600180548060200260200160405190810160405280929190818152602001828054801561034557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116102fb575b5050505050905060005b815181101561042857600082828151811061036d5761036c610b2e565b5b602002602001015190506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050808061042090610b8c565b91505061034f565b50600067ffffffffffffffff81111561044457610443610bd4565b5b6040519080825280602002602001820160405280156104725781602001602082028036833780820191505090505b5060019080519060200190610488929190610940565b50600061049361053e565b905060008173ffffffffffffffffffffffffffffffffffffffff16476040516104bb90610c34565b60006040518083038185875af1925050503d80600081146104f8576040519150601f19603f3d011682016040523d82523d6000602084013e6104fd565b606091505b505090508061050b57600080fd5b505050565b662386f26fc1000081565b6105236107ed565b61052d6000610874565b565b600061053961053e565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b662386f26fc100003410156105b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a890610ca6565b60405180910390fd5b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106009190610cc6565b92505081905550600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610714576001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b343373ffffffffffffffffffffffffffffffffffffffff167f5af8184bef8e4b45eb9f6ed7734d04da38ced226495548f46e0c8ff8d7d9a52460405160405180910390a3565b6000600180549050905090565b61076f6107ed565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107e15760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107d89190610b13565b60405180910390fd5b6107ea81610874565b50565b6107f5610938565b73ffffffffffffffffffffffffffffffffffffffff1661081361053e565b73ffffffffffffffffffffffffffffffffffffffff161461087257610836610938565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108699190610b13565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b8280548282559060005260206000209081019282156109b9579160200282015b828111156109b85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610960565b5b5090506109c691906109ca565b5090565b5b808211156109e35760008160009055506001016109cb565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a17826109ec565b9050919050565b610a2781610a0c565b8114610a3257600080fd5b50565b600081359050610a4481610a1e565b92915050565b600060208284031215610a6057610a5f6109e7565b5b6000610a6e84828501610a35565b91505092915050565b6000819050919050565b610a8a81610a77565b82525050565b6000602082019050610aa56000830184610a81565b92915050565b610ab481610a77565b8114610abf57600080fd5b50565b600081359050610ad181610aab565b92915050565b600060208284031215610aed57610aec6109e7565b5b6000610afb84828501610ac2565b91505092915050565b610b0d81610a0c565b82525050565b6000602082019050610b286000830184610b04565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b9782610a77565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610bc957610bc8610b5d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c1e600083610c03565b9150610c2982610c0e565b600082019050919050565b6000610c3f82610c11565b9150819050919050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c90601b83610c49565b9150610c9b82610c5a565b602082019050919050565b60006020820190508181036000830152610cbf81610c83565b9050919050565b6000610cd182610a77565b9150610cdc83610a77565b9250828201905080821115610cf457610cf3610b5d565b5b9291505056fea264697066735822122012c11c27a90f619c16e6a31df6cdf4e67e28f9576b61fca169493b0654d9177b64736f6c63430008140033",
  "deployedBytecode": "0x6080604052600436106100955760003560e01c8063893d20e811610059578063893d20e8146101745780638da5cb5b1461019f578063b60d4288146101ca578063cb95f55e146101d4578063f2fde38b146101ff5761009c565b80630343fb25146100a15780630e63c7ad146100de5780633ccfd60b1461011b5780636b69a59214610132578063715018a61461015d5761009c565b3661009c57005b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c39190610a4a565b610228565b6040516100d59190610a90565b60405180910390f35b3480156100ea57600080fd5b5061010560048036038101906101009190610ad7565b610271565b6040516101129190610b13565b60405180910390f35b34801561012757600080fd5b506101306102b9565b005b34801561013e57600080fd5b50610147610510565b6040516101549190610a90565b60405180910390f35b34801561016957600080fd5b5061017261051b565b005b34801561018057600080fd5b5061018961052f565b6040516101969190610b13565b60405180910390f35b3480156101ab57600080fd5b506101b461053e565b6040516101c19190610b13565b60405180910390f35b6101d2610567565b005b3480156101e057600080fd5b506101e961075a565b6040516101f69190610a90565b60405180910390f35b34801561020b57600080fd5b5061022660048036038101906102219190610a4a565b610767565b005b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006001828154811061028757610286610b2e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6102c16107ed565b6000600180548060200260200160405190810160405280929190818152602001828054801561034557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116102fb575b5050505050905060005b815181101561042857600082828151811061036d5761036c610b2e565b5b602002602001015190506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050808061042090610b8c565b91505061034f565b50600067ffffffffffffffff81111561044457610443610bd4565b5b6040519080825280602002602001820160405280156104725781602001602082028036833780820191505090505b5060019080519060200190610488929190610940565b50600061049361053e565b905060008173ffffffffffffffffffffffffffffffffffffffff16476040516104bb90610c34565b60006040518083038185875af1925050503d80600081146104f8576040519150601f19603f3d011682016040523d82523d6000602084013e6104fd565b606091505b505090508061050b57600080fd5b505050565b662386f26fc1000081565b6105236107ed565b61052d6000610874565b565b600061053961053e565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b662386f26fc100003410156105b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a890610ca6565b60405180910390fd5b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106009190610cc6565b92505081905550600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610714576001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b343373ffffffffffffffffffffffffffffffffffffffff167f5af8184bef8e4b45eb9f6ed7734d04da38ced226495548f46e0c8ff8d7d9a52460405160405180910390a3565b6000600180549050905090565b61076f6107ed565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107e15760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107d89190610b13565b60405180910390fd5b6107ea81610874565b50565b6107f5610938565b73ffffffffffffffffffffffffffffffffffffffff1661081361053e565b73ffffffffffffffffffffffffffffffffffffffff161461087257610836610938565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108699190610b13565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b8280548282559060005260206000209081019282156109b9579160200282015b828111156109b85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610960565b5b5090506109c691906109ca565b5090565b5b808211156109e35760008160009055506001016109cb565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a17826109ec565b9050919050565b610a2781610a0c565b8114610a3257600080fd5b50565b600081359050610a4481610a1e565b92915050565b600060208284031215610a6057610a5f6109e7565b5b6000610a6e84828501610a35565b91505092915050565b6000819050919050565b610a8a81610a77565b82525050565b6000602082019050610aa56000830184610a81565b92915050565b610ab481610a77565b8114610abf57600080fd5b50565b600081359050610ad181610aab565b92915050565b600060208284031215610aed57610aec6109e7565b5b6000610afb84828501610ac2565b91505092915050565b610b0d81610a0c565b82525050565b6000602082019050610b286000830184610b04565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b9782610a77565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610bc957610bc8610b5d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c1e600083610c03565b9150610c2982610c0e565b600082019050919050565b6000610c3f82610c11565b9150819050919050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c90601b83610c49565b9150610c9b82610c5a565b602082019050919050565b60006020820190508181036000830152610cbf81610c83565b9050919050565b6000610cd182610a77565b9150610cdc83610a77565b9250828201905080821115610cf457610cf3610b5d565b5b9291505056fea264697066735822122012c11c27a90f619c16e6a31df6cdf4e67e28f9576b61fca169493b0654d9177b64736f6c63430008140033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "Funds our contract based on the ETH/USD price"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/BuyMeACupOfCoffee.sol:BuyMeACupOfCoffee",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 190,
        "contract": "contracts/BuyMeACupOfCoffee.sol:BuyMeACupOfCoffee",
        "label": "s_bosses",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 194,
        "contract": "contracts/BuyMeACupOfCoffee.sol:BuyMeACupOfCoffee",
        "label": "s_isBoss",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 198,
        "contract": "contracts/BuyMeACupOfCoffee.sol:BuyMeACupOfCoffee",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}